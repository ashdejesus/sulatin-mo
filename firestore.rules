/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a strict user-ownership model for the /users/{userId} collection.
 *
 * Data Structure:
 * All user data is stored under the /users/{userId} path, where {userId} corresponds to the Firebase Authentication UID.
 *
 * Key Security Decisions:
 * - User accounts are created with data keyed by the Firebase UID.
 * - Listing user accounts is disallowed at the root `/users` level.
 * - Only authenticated users can create accounts for themselves.
 * - Updates and deletes are restricted to the user who owns the account.
 * - The firebaseUid field within the UserAccount document is validated for consistency with the document ID on creation and enforced immutability on updates.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces strict user-ownership for the /users/{uid} collection.
     * @path /users/{uid}
     * @allow (create) User with UID 'user123' creates their own account at /users/user123.
     * @deny (create) User with UID 'user123' attempts to create an account for 'otherUser' at /users/otherUser.
     * @allow (get) User with UID 'user123' retrieves their own account data at /users/user123.
     * @allow (update) User with UID 'user123' updates their own account data at /users/user123.
     * @allow (delete) User with UID 'user123' deletes their own account at /users/user123.
     * @deny (list) Any user attempts to list all accounts in the /users collection.
     * @principle Enforces document ownership for all operations, preventing unauthorized access.
     */
    match /users/{userId} {
      // Helpers
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return isSignedIn() && request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      // Permissions
      allow get: if isOwner(userId);
      allow list: if false;

      allow create: if isOwner(userId) && request.resource.data.firebaseUid == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.firebaseUid == resource.data.firebaseUid;
      allow delete: if isExistingOwner(userId);
    }
  }
}